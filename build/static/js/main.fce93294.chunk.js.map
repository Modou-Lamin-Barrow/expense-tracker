{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","payload","filter","transaction","id","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","IncomeExpense","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","console","log","htmlFor","onChange","target","placeholder","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fce93294.chunk.js","sourcesContent":["\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n           <h2>Expense Tracker</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default (state, action) =>{\r\n    switch(action.type){\r\n        case 'ADD_TRANSACTION':\r\n        return{\r\n            ...state,\r\n            transactions: [action.payload,...state.transactions]\r\n        }\r\n        case 'DELETE_TRANSACTION':\r\n        return{\r\n            ...state,\r\n            transactions: state.transactions.filter(transaction =>(transaction.id !== action.payload))\r\n        }\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, { createContext, useReducer} from 'react'\r\n// import Transaction from '../components/Transaction';\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n// Initial State\r\nconst initialState = {\r\n    transactions : [\r\n        // { id: 1, text: 'Flower', amount: -20 },\r\n        // { id: 2, text: 'Salary', amount: 300 },\r\n        // { id: 3, text: 'Book', amount:  -10 },\r\n        // { id: 4, text: 'Camera', amount: 150 }\r\n    ]\r\n}\r\n \r\n// create context \r\nexport const GlobalContext = createContext(initialState)\r\n\r\n// component provider\r\nexport const GlobalProvider = ({children}) =>{\r\n    const [state ,dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions deleting transaction\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n        type: 'DELETE_TRANSACTION',\r\n        payload: id\r\n        });\r\n    }\r\n\r\n    // Actions deleting transaction\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload: transaction\r\n        });\r\n    }\r\n\r\n    return(<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}\r\n\r\n","import React, {useContext} from \"react\";\r\nimport { GlobalContext } from '../context/GlobalState';\r\nconst Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    // console.log(amounts)\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0);\r\n    return (\r\n       <>\r\n            <h4>Your Balance</h4>\r\n            <h1 >${total}</h1>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, {useContext} from \"react\";\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst IncomeExpense = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n  );\r\n    return (\r\n        <>\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                <h4>Income</h4>\r\n                <p  className=\"money plus\">${income}</p>\r\n                </div>\r\n                <div>\r\n                <h4>Expense</h4>\r\n                <p  className=\"money minus\">${expense}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IncomeExpense\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = ({transaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n        {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span><button onClick={()=>deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li> \r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, {useContext} from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport  Transaction  from \"./Transaction\";\r\n\r\nconst TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n    \r\n   return (\r\n    <>\r\n    <h3>History</h3>\r\n    <ul className=\"list\">\r\n      {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n    </ul>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [amount, setAmount] = useState(0)\r\n\r\n    const {addTransaction} = useContext(GlobalContext);\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() *100000),\r\n            text,\r\n            amount: +amount\r\n            \r\n\r\n        }\r\n        console.log(addTransaction(newTransaction))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h3>Add new transaction</h3>\r\n        <form onSubmit = {onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e) =>setText(e.target.value)}  placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label>\r\n          <input type='number' value={amount} onChange={(e) =>setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n        </form>\r\n  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <h5>Made with love by MLBarrow</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport './App.css'\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpense from \"./components/IncomeExpense\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n        <Footer />\n      </div>\n        \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}